{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aria-checked","onChange","toggleGreenMode","htmlFor","toggleBlueMode","toggleLightMode","TextForm","validation","msg","text","alertShow","_useState","useState","_useState2","Object","slicedToArray","setText","Fragment","heading","style","backgroundColor","color","value","event","target","rows","onClick","toUpperCase","toLowerCase","navigator","clipboard","writeText","replaceAll","match","join","split","filter","element","length","textAlign","Alert","height","alert","padding","role","word","lowerWord","charAt","slice","captitalize","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","window","onload","document","getElementById","checked","showAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4591e5a7.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode === 'dark' ? 'dark' : 'light'} bg-${props.mode === 'dark' ? 'dark' : 'light'}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link home active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link about\" to=\"/About\">{props.aboutText}</Link>\r\n                        </li> */}\r\n\r\n                    </ul>\r\n                    <div className={`me-3 custom-control custom-switch text-${props.mode === 'dark' ? 'light' : 'dark'}`} id=\"greenModeDiv\" >\r\n                        <input className=\"custom-control-input me-1\" aria-checked=\"false\" onChange={props.toggleGreenMode} type=\"radio\" id=\"greenMode\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"flexSwitchCheckDefault\">Green Mode</label>\r\n                    </div>\r\n                    <div className={`me-3 custom-control custom-switch text-${props.mode === 'dark' ? 'light' : 'dark'}`} id=\"blueModeDiv\">\r\n                        <input className=\"custom-control-input me-1\" aria-checked=\"false\" onChange={props.toggleBlueMode} type=\"radio\" id=\"blueMode\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"flexSwitchCheckDefault\">Blue Mode</label>\r\n                    </div>\r\n                    <div className={`custom-control custom-switch text-${props.mode === 'dark' ? 'light' : 'dark'}`} id=\"lightModeDiv\">\r\n                        <input className=\"custom-control-input me-1\" aria-checked=\"false\" onChange={props.toggleLightMode} type=\"radio\" id=\"lightMode\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"flexSwitchCheckDefault\">Light Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nNavbar.defaultProps = {\r\n    title: \"DefaultTitle\",\r\n    aboutText: \"DefaultAbout\"\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function TextForm(props) {\r\n \r\n    const handleChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const validation = (msg) => {\r\n        if (text === '') {\r\n            props.alertShow(\"Please enter text\", \"warning\");\r\n            return false;\r\n        }\r\n        else {\r\n            props.alertShow(msg, \"success\");\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleUpClick = () => {\r\n        if (validation(\"Converted to Upper Case\")) {\r\n            setText(text.toUpperCase());\r\n        }\r\n    }\r\n\r\n    const handleLwClick = () => {\r\n        if (validation(\"Converted to Lower Case\")) {\r\n            setText(text.toLowerCase());\r\n        }\r\n    }\r\n\r\n    const handleSpClick = () => {\r\n        if (validation(\"All spaces removed\")) {\r\n            setText(text.replaceAll('\\n', '').replaceAll(' ', ''));\r\n        }\r\n    }\r\n\r\n    const handleExSpClick = () => {\r\n        if (validation(\"Extra spaces removed\")) {\r\n            setText(text.split(/[ ]+/).join(' ').split(/[\\n]+/).join(\"\\n\"));\r\n        }\r\n    }\r\n\r\n    const handleCopyClick = () => {\r\n        if (validation(\"Text copied\")) {\r\n            navigator.clipboard.writeText(text);\r\n        }\r\n\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        if (validation(\"Text cleared\")) {\r\n            setText(\"\");\r\n        }\r\n    }\r\n    \r\n    const handleNumExSpClick = () => {\r\n        if (validation(\"Number Extracted\")) {\r\n            setText(text.match(/\\d+/g).join(' '));\r\n        }\r\n    }\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-3\">\r\n                <h4>{props.heading}</h4>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" style={{ backgroundColor: props.mode === 'dark' ? '#6c757dd1' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} value={text} id=\"textBox1\" onChange={handleChange} rows=\"7\"></textarea>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-secondary mx-1 my-1\" onClick={handleUpClick}>UpperCase</button>\r\n                <button type=\"button\" className=\"btn btn-secondary mx-1 my-1\" onClick={handleLwClick}>LowerCase</button>\r\n                <button type=\"button\" className=\"btn btn-secondary mx-1 my-1\" onClick={handleCopyClick}>Copy Text</button>\r\n                <button type=\"button\" className=\"btn btn-secondary mx-1 my-1\" onClick={handleSpClick}>Remove all Spaces</button>\r\n                <button type=\"button\" className=\"btn btn-secondary mx-1 my-1\" onClick={handleNumExSpClick}>Extract Numbers</button>\r\n                <button type=\"button\" className=\"btn btn-secondary mx-1 my-1\" onClick={handleExSpClick}>Remove Extra Spaces</button>\r\n                <button type=\"button\" className=\"btn btn-secondary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n                <div className=\"my-3\">\r\n                    <hr></hr>\r\n                    <h5>Your text Summary</h5>\r\n                    <p><b>{text.split(/\\s+/).filter((element) => {return element.length !== 0}).length}</b> <i>words</i>, <b>{text.length}</b> <i>chars</i>, <b>{text.match(/[a,e,i,o,u]/g) === null ? 0 :text.match(/[a,e,i,o,u]/g).length }</b> <i>vowels</i></p>\r\n                    <p><b>{text.replaceAll('\\n', '').replaceAll(' ', '').length / (125 * 5)}</b> <i>minutes</i>, <b>{text.replaceAll('\\n', '').replaceAll(' ', '').length * 60 / (150 * 5)}</b> <i>seconds</i> to read</p>\r\n                    <hr></hr>\r\n                    <h5>Preview</h5>\r\n                    <p style={{ textAlign: 'justify' }}>{text === '' ? <i>Nothing to preview</i> : text}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nTextForm.propTypes = {\r\n    heading: PropTypes.string\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const captitalize = (word) => {\r\n        const lowerWord = word.toLowerCase();\r\n        return lowerWord.charAt(0).toUpperCase() + lowerWord.slice(1);      \r\n    }\r\n\r\n    let myStyle = {\r\n        height: '40px',\r\n        padding: '7px 17px',\r\n    }\r\n\r\n    return (\r\n        <div style={{height: '30px'}}>\r\n        {props.alert && <div style={myStyle} className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{captitalize(props.alert.type)} : </strong>{props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport { useState } from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\")  // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null)\n\n\n  // by default check Light Mode Radio button\n  window.onload = function () {\n    document.getElementById(\"lightMode\").checked = true;\n  };\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1800);\n  }\n\n  const toggleGreenMode = () => {\n    document.getElementById(\"greenMode\").checked = true;\n    document.getElementById(\"lightMode\").checked = false;\n    document.getElementById(\"blueMode\").checked = false;\n    setMode(\"dark\");\n    document.body.style.backgroundColor = '#18402d';\n    document.body.style.color = 'white';\n    showAlert(\"Green Mode enabled\", \"success\");\n\n  }\n\n  const toggleBlueMode = () => {\n    document.getElementById(\"blueMode\").checked = true;\n    document.getElementById(\"lightMode\").checked = false;\n    document.getElementById(\"greenMode\").checked = false;\n    setMode(\"dark\");\n    document.body.style.backgroundColor = '#032352';\n    document.body.style.color = 'white';\n    showAlert(\"Blue Mode enabled\", \"success\");\n  }\n\n  const toggleLightMode = () => {\n    document.getElementById(\"lightMode\").checked = true;\n    document.getElementById(\"blueMode\").checked = false;\n    document.getElementById(\"greenMode\").checked = false;\n    setMode(\"light\");\n    document.body.style.backgroundColor = 'white';\n    document.body.style.color = 'black';\n    showAlert(\"Light Mode enabled\", \"success\");\n\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleGreenMode={toggleGreenMode} toggleBlueMode={toggleBlueMode} toggleLightMode={toggleLightMode} />\n      <Alert alert={alert} />\n      <TextForm heading=\"Enter text to analyze\" mode={mode} alertShow={showAlert} />\n      {/* <Routes> */}\n      {/* <Route path=\"/about\" element={<About alertShow={showAlert} />}>\n          </Route>\n          <Route path=\"/\" element={<TextForm heading=\"Enter text to analyze\" mode={mode} alertShow={showAlert} />}>\n          </Route> */}\n      {/* </Routes> */}\n      {/* </Router> */}\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}